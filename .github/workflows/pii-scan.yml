name: PII Data Scan Pipeline

on:
  workflow_dispatch:
  
jobs:
  pii-scan:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Setup Java
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'

    - name: Download Gosu Distribution
      shell: bash
      run: |
        echo "Downloading Gosu distribution..."
        curl -L -o gosu.zip http://search.maven.org/remotecontent?filepath=org/gosu-lang/gosu/gosu/1.14.16/gosu-1.14.16-full.zip
        unzip gosu.zip -d gosu_dist

    - name: Find gosu.cmd
      id: find_gosu
      shell: pwsh
      run: |
          $gosu = Get-ChildItem -Path gosu_dist -Recurse -Filter "gosu.cmd" | Select-Object -First 1
          if (-not $gosu) {
            Write-Error "gosu.cmd not found!"
            exit 1
          }
          echo "Found gosu.cmd at $($gosu.FullName)"
          echo "GOSU_CMD=$($gosu.FullName)" | Out-File -FilePath $Env:GITHUB_ENV -Append

    - name: Clean previous builds
      shell: cmd
      run: |
        echo Cleaning old build artifacts...
        if exist dist rmdir /s /q dist
    
    - name: Validate Gosu Files
      shell: cmd
      run: |
        echo Validating all Gosu files...
        for /R src %%f in (*.gs) do (
          echo Checking syntax of %%f
          call "%GOSU_CMD%" -c %%f || exit /b 1
        )
    
    - name: Build Gosu Applications
      shell: cmd
      run: |
        echo Building Gosu applications...
        if exist dist rmdir /s /q dist
        if exist build-app.bat (
          call build-app.bat
        ) else (
          echo "âš  build-app.bat not found, skipping build."
        )

    - name: Run PII Scan in Parallel (PowerShell)
      shell: powershell
      run: |
        $files = Get-ChildItem -Path "$Env:GITHUB_WORKSPACE\dist" -Filter "*.gs"
        $jobs = @()
        foreach ($f in $files) {
        $jobs += Start-Job -ScriptBlock { param($file, $cmd) & $cmd $file } -ArgumentList $f.FullName, $Env:GOSU_CMD
        }
        $jobs | Wait-Job | Receive-Job
        $jobs | Remove-Job

         
    - name: Upload All PII Logs
      uses: actions/upload-artifact@v4
      with:
        name: pii-logs
        path: '**\*.log'
        
    - name: Display Report Summary
      shell: cmd
      run: |
        if exist pii-scan-report.log (
        echo PII Scan Report Summary:
        type pii-scan-report.log
        ) else (
        echo "PII scan report not found!"
        )
